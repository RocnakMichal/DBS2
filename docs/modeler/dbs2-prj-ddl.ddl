-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2025-03-18 20:36:52 SEÄŒ
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE genre (
    genre_id INTEGER NOT NULL,
    name     VARCHAR2(255) NOT NULL
);

ALTER TABLE genre ADD CONSTRAINT genre_pk PRIMARY KEY ( genre_id );

CREATE TABLE "Group" (
    group_id   INTEGER NOT NULL,
    owner_id   INTEGER NOT NULL,
    name       VARCHAR2(255),
    created_at DATE
);

ALTER TABLE "Group" ADD CONSTRAINT group_pk PRIMARY KEY ( group_id );

CREATE TABLE group_member (
    id         INTEGER NOT NULL,
    user_id    INTEGER NOT NULL,
    group_id   INTEGER NOT NULL,
    created_at DATE
);

ALTER TABLE group_member ADD CONSTRAINT group_member_pk PRIMARY KEY ( id );

CREATE TABLE group_movie (
    group_movie_id INTEGER NOT NULL,
    movie_id       INTEGER NOT NULL,
    group_id       INTEGER NOT NULL,
    created_at     DATE
);

ALTER TABLE group_movie ADD CONSTRAINT group_movie_pk PRIMARY KEY ( group_movie_id );

CREATE TABLE log (
    log_id    INTEGER NOT NULL,
    user_id   INTEGER NOT NULL,
    action    VARCHAR2(255) NOT NULL,
    timestamp TIMESTAMP
);

ALTER TABLE log ADD CONSTRAINT log_pk PRIMARY KEY ( log_id );

CREATE TABLE movie (
    movie_id     INTEGER NOT NULL,
    title        VARCHAR2(255) NOT NULL,
    genre_id     INTEGER NOT NULL,
    director     VARCHAR2(255),
    release_year INTEGER,
    description  CLOB,
    created_at   DATE
);

ALTER TABLE movie ADD CONSTRAINT movie_pk PRIMARY KEY ( movie_id );

CREATE TABLE rating (
    rating_id  INTEGER NOT NULL,
    movie_id   INTEGER NOT NULL,
    user_id    INTEGER NOT NULL,
    director   VARCHAR2(255),
    rating     INTEGER NOT NULL,
    "comment"  CLOB,
    created_at DATE
);

ALTER TABLE rating ADD CONSTRAINT rating_pk PRIMARY KEY ( rating_id );

CREATE TABLE recommendation (
    recommendation_id    INTEGER NOT NULL,
    user_id              INTEGER NOT NULL,
    recommended_movie_id INTEGER NOT NULL,
    created_at           DATE
);

ALTER TABLE recommendation ADD CONSTRAINT recommendation_pk PRIMARY KEY ( recommendation_id );

CREATE TABLE statistics (
    statistics_id        INTEGER NOT NULL,
    movie_id             INTEGER NOT NULL,
    total_ratings        INTEGER,
    avg_rating           INTEGER,
    total_recommendation INTEGER NOT NULL,
    created_at           DATE
);

ALTER TABLE statistics ADD CONSTRAINT statistics_pk PRIMARY KEY ( statistics_id );

CREATE TABLE "User" (
    user_id       INTEGER NOT NULL,
    name          VARCHAR2(255) NOT NULL,
    email         VARCHAR2(255) NOT NULL,
    password_hash VARCHAR2(255) NOT NULL,
    role          VARCHAR2(20),
    created_at    DATE
);

ALTER TABLE "User" ADD CONSTRAINT user_pk PRIMARY KEY ( user_id );

ALTER TABLE "User" ADD CONSTRAINT user__un UNIQUE ( email );

ALTER TABLE group_member
    ADD CONSTRAINT group_member_group_fk FOREIGN KEY ( group_id )
        REFERENCES "Group" ( group_id );

ALTER TABLE group_member
    ADD CONSTRAINT group_member_user_fk FOREIGN KEY ( user_id )
        REFERENCES "User" ( user_id );

ALTER TABLE group_movie
    ADD CONSTRAINT group_memberv1_group_fk FOREIGN KEY ( group_id )
        REFERENCES "Group" ( group_id );

ALTER TABLE group_movie
    ADD CONSTRAINT group_movie_movie_fk FOREIGN KEY ( movie_id )
        REFERENCES movie ( movie_id );

ALTER TABLE "Group"
    ADD CONSTRAINT group_user_fk FOREIGN KEY ( owner_id )
        REFERENCES "User" ( user_id );

ALTER TABLE log
    ADD CONSTRAINT log_user_fk FOREIGN KEY ( user_id )
        REFERENCES "User" ( user_id );

ALTER TABLE movie
    ADD CONSTRAINT movie_genre_fk FOREIGN KEY ( genre_id )
        REFERENCES genre ( genre_id );

ALTER TABLE rating
    ADD CONSTRAINT rating_movie_fk FOREIGN KEY ( movie_id )
        REFERENCES movie ( movie_id );

ALTER TABLE rating
    ADD CONSTRAINT rating_user_fk FOREIGN KEY ( user_id )
        REFERENCES "User" ( user_id );

ALTER TABLE recommendation
    ADD CONSTRAINT recommendation_movie_fk FOREIGN KEY ( recommended_movie_id )
        REFERENCES movie ( movie_id );

ALTER TABLE recommendation
    ADD CONSTRAINT recommendation_user_fk FOREIGN KEY ( user_id )
        REFERENCES "User" ( user_id );

ALTER TABLE statistics
    ADD CONSTRAINT statistics_movie_fk FOREIGN KEY ( movie_id )
        REFERENCES movie ( movie_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
